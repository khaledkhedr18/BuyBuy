# Generated by Django 4.2.7 on 2025-09-15 00:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("categories", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "short_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("sku", models.CharField(max_length=100, unique=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "compare_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.IntegerField(
                        default=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("dimensions", models.CharField(blank=True, max_length=100, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_digital", models.BooleanField(default=False)),
                ("requires_shipping", models.BooleanField(default=True)),
                ("tax_class", models.CharField(blank=True, max_length=50, null=True)),
                ("meta_title", models.CharField(blank=True, max_length=200, null=True)),
                ("meta_description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="products",
                        to="categories.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductSpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("specification_name", models.CharField(max_length=200)),
                ("specification_value", models.TextField()),
                ("sort_order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="specifications",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Specification",
                "verbose_name_plural": "Product Specifications",
                "db_table": "product_specifications",
                "ordering": ["sort_order", "specification_name"],
                "indexes": [
                    models.Index(
                        fields=["product"], name="product_spe_product_1f778b_idx"
                    ),
                    models.Index(
                        fields=["specification_name"],
                        name="product_spe_specifi_ded17f_idx",
                    ),
                    models.Index(
                        fields=["sort_order"], name="product_spe_sort_or_0c75af_idx"
                    ),
                    models.Index(
                        fields=["product", "sort_order"],
                        name="product_spe_product_f93580_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.URLField(max_length=500)),
                ("alt_text", models.CharField(blank=True, max_length=200, null=True)),
                ("is_primary", models.BooleanField(default=False)),
                ("sort_order", models.IntegerField(default=0)),
                ("file_size", models.IntegerField(blank=True, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
                "db_table": "product_images",
                "ordering": ["sort_order", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["product"], name="product_ima_product_55415d_idx"
                    ),
                    models.Index(
                        fields=["is_primary"], name="product_ima_is_prim_873e82_idx"
                    ),
                    models.Index(
                        fields=["sort_order"], name="product_ima_sort_or_e48c66_idx"
                    ),
                    models.Index(
                        fields=["product", "is_primary"],
                        name="product_ima_product_c8c86a_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_sku_fe2039_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["category"], name="products_categor_4083ff_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="products_price_fe467e_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active"], name="products_is_acti_cb485f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_featured"], name="products_is_feat_19b203_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["stock_quantity"], name="products_stock_q_5d82ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["created_at"], name="products_created_e1ba5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active"], name="products_categor_9e60b3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["price", "is_active"], name="products_price_5af071_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["name"], name="products_name_6f9890_idx"),
        ),
    ]
